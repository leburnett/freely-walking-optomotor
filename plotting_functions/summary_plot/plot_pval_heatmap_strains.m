function plot_pval_heatmap_strains(pvals_all, target_mean_all, control_mean_all, plot_x, multi)

    % Determine whether to use a red or blue colormap. 
    diff_array = target_mean_all - control_mean_all;
    diff_array2 = diff_array;
    diff_array2(diff_array2>0) = 1;
    diff_array2(diff_array2<=0) = -1;

    % Initialize RGB image
    [m, n] = size(pvals_all);
    heatmap_rgb = ones(m, n, 3); % Start with white background
    
    % % Mask for significant values (<0.05)
    % sig_mask = pvals_all <0.05;
    % 
    % % Normalize p-values to range [0, 1], where 0 -> full color, 0.05 -> white
    % normalized_p = pvals_all / 0.05; % 0 to 1 for p <= 0.05
    % normalized_p(normalized_p > 1) = 1; % Cap at 1

    normalized_p = mapValues(pvals_all);
    
    % Loop through each element
    for i = 1:m
        for j = 1:n
            p_val = normalized_p(i,j);
            if diff_array2(i,j) > 0
                % Red: full red at low p, fade to white
                heatmap_rgb(i,j,:) = [1, p_val, p_val]; % Red fades with p
            else
                % Blue: full blue at low p, fade to white
                heatmap_rgb(i,j,:) = [p_val, p_val, 1]; % Blue fades with p
            end
        end
    end
    
    if ~multi
        figure
        subplot(1, 40, 1:39)
    end 

    % Display the heatmap
    image(heatmap_rgb);
    
    cond_titles = {"60deg-gratings-4Hz"...
        , "60deg-gratings-8Hz"...
        , "narrow-ON-bars-4Hz"...
        , "narrow-OFF-bars-4Hz"...
        , "ON-curtains-8Hz"...
        , "OFF-curtains-8Hz"...
        , "reverse-phi-2Hz"...
        , "reverse-phi-4Hz"...
        , "60deg-flicker-4Hz"...
        , "60deg-gratings-static"...
        , "60deg-gratings-0-8-offset"...
        , "32px-ON-single-bar"...
        };

    n_conditions = numel(cond_titles);
    yticks(1:n_conditions)
    yticklabels(cond_titles)

    % Boundaries between metric categories.
    hold on; 
    plot([7.5 7.5], [0 13], 'k-', 'LineWidth', 1.2);
    plot([11.5 11.5], [0 13], 'k-', 'LineWidth', 1.2);
    plot([17.5 17.5], [0 13], 'k-', 'LineWidth', 1.2);
    plot([23.5 23.5], [0 13], 'k-', 'LineWidth', 1.2);

    if plot_x
        % Xlabels for metric names
        xticks(1:27)
        xticklabels({...
            'fv-stim', ...
            'fv-5s-int', ...
            'fv-change-3s-stim-norm', ...
            'fv-change-3s-swap-norm', ...
            'fv-change-3s-stop-norm', ...
            'fv-prop-slow-stim', ...
            'fv-prop-fast-stim', ... %11
            'av-stim', ...
            'av-5s-int', ...
            'av-change-3s-stim-norm', ...
            'av-change-3s-stop-norm', ... %(18)
            'turning-stim', ...
            'turning-5s-int', ...
            'turning-npeaks-stim', ...
            'turning-pprom-stim', ...
            'turning-npeaks-int', ...
            'turning-pprom-int', ... % (27)
            'dist-swap-3'...
            'dist-end-stim-3', ...
            'dist-int-10', ...
            'dist-delta-swap-3'...
            'dist-delta-end-stim-3', ...
            'dist-delta-int-10', ... % 32
            'str-stim', ...
            'str-stim-3', ...
            'str-end-stim-5', ...
            'str-int-start-5', ...
            })
    else
        xticks(1:27)
        xticklabels({''})
    end

    ax = gca;
    ax.FontSize = 5;
    ax.LineWidth = 0.5;

    if ~multi
        % Add colour bar
        subplot(1, 40, 40)
       
        c_array(:, 1 , :) = [...
            1 0 0; ...
            1 0.2 0.2; ...
            1 0.4 0.4; ...
            1 0.6 0.6; ...
            1 0.8 0.8; ...
            1 1 1; ...
            0.8 0.8 1; ...
            0.6 0.6 1; ...
            0.4 0.4 1; ...
            0.2 0.2 1; ...
            0 0 1;...
            ];
    
        imagesc(c_array);
        axis off
    end 



end 